// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace TableTopCatalogDemoApp.Data.Migrations
{
    [DbContext(typeof(TableTopDataContext))]
    partial class TableTopDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AgeFrom")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayersFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PlayersTo")
                        .HasColumnType("int");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SessionTo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("YearPublished")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName", "LastName")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.TeamMember", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "RoleId");

                    b.HasIndex("GameId");

                    b.HasIndex("RoleId");

                    b.HasIndex("PersonId", "RoleId", "GameId")
                        .IsUnique();

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Game", b =>
                {
                    b.HasOne("TableTopCatalogDemoApp.Data.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.TeamMember", b =>
                {
                    b.HasOne("TableTopCatalogDemoApp.Data.Entities.Game", "Game")
                        .WithMany("TeamMembers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TableTopCatalogDemoApp.Data.Entities.Person", "Person")
                        .WithMany("MemberOf")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TableTopCatalogDemoApp.Data.Entities.Role", "Role")
                        .WithMany("Members")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Person");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Game", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Person", b =>
                {
                    b.Navigation("MemberOf");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("TableTopCatalogDemoApp.Data.Entities.Role", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
